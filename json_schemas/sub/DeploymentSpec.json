{
  "title": "DeploymentSpec",
  "description": "Deployment spec schema.",
  "type": "object",
  "properties": {
    "targetResource": {
      "title": "Targetresource",
      "description": "The target resource to be deployed",
      "default": {},
      "allOf": [
        {
          "$ref": "#/definitions/TargetResource"
        }
      ]
    },
    "replicas": {
      "title": "Replicas",
      "description": "The number of replicas to be deployed",
      "default": 1,
      "type": "integer"
    },
    "container": {
      "title": "Container",
      "description": "The container specs",
      "allOf": [
        {
          "$ref": "#/definitions/ContainerSpec"
        }
      ]
    },
    "volumes": {
      "title": "Volumes",
      "description": "The volumes to be mounted in the container",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/Volume"
      }
    }
  },
  "required": [
    "container"
  ],
  "additionalProperties": false,
  "definitions": {
    "Kind": {
      "title": "Kind",
      "description": "Enum for all kinds of resources.",
      "enum": [
        "Embedding",
        "VectorStore",
        "VectorStoreQATool",
        "LLM",
        "LLMChat",
        "LoadTool",
        "Splitter",
        "Agent",
        "PromptTemplate",
        "LLMTool",
        "EmbeddingsLoader",
        "Custom"
      ],
      "type": "string"
    },
    "TargetResource": {
      "title": "TargetResource",
      "description": "Deployment target resource schema.",
      "type": "object",
      "properties": {
        "labels": {
          "title": "Labels",
          "description": "Labels are useful for filtering and finding objects",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "title": "Name",
          "description": "Name of the dependency",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the dependency",
          "allOf": [
            {
              "$ref": "#/definitions/Kind"
            }
          ]
        },
        "namespace": {
          "title": "Namespace",
          "description": "The namespace of the object",
          "default": "default",
          "maxLength": 63,
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Resource options",
          "default": {},
          "type": "object"
        },
        "description": {
          "title": "Description",
          "description": "Tool description",
          "type": "string"
        }
      },
      "required": [
        "name",
        "kind"
      ],
      "additionalProperties": false
    },
    "EnvironmentVariable": {
      "title": "EnvironmentVariable",
      "description": "Environment variable schema.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of the environment variable",
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "The value of the environment variable",
          "type": "string"
        },
        "valueFrom": {
          "title": "Valuefrom",
          "description": "The value of the environment variable",
          "type": "object"
        }
      },
      "required": [
        "name"
      ],
      "additionalProperties": false
    },
    "ContainerPort": {
      "title": "ContainerPort",
      "description": "Container port schema.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of the port",
          "maxLength": 15,
          "type": "string"
        },
        "protocol": {
          "title": "Protocol",
          "description": "The protocol for the port",
          "default": "tcp",
          "enum": [
            "tcp",
            "udp",
            "TCP",
            "UDP"
          ],
          "type": "string"
        },
        "port": {
          "title": "Port",
          "description": "The port number",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "VolumeMounts": {
      "title": "VolumeMounts",
      "description": "Volume mount schema.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of the volume mount",
          "type": "string"
        },
        "mountPath": {
          "title": "Mountpath",
          "description": "The path where the volume should be mounted",
          "type": "string"
        },
        "readOnly": {
          "title": "Readonly",
          "description": "Whether the volume should be mounted as read-only",
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "mountPath"
      ],
      "additionalProperties": false
    },
    "ContainerSpec": {
      "title": "ContainerSpec",
      "description": "Deployment spec schema.",
      "type": "object",
      "properties": {
        "image": {
          "title": "Image",
          "description": "The container image to be deployed",
          "type": "string"
        },
        "env": {
          "title": "Env",
          "description": "Environment variables to be set for the deployment",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariable"
          }
        },
        "ports": {
          "title": "Ports",
          "description": "The ports to be exposed by the container",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerPort"
          }
        },
        "image_pull_policy": {
          "title": "Image Pull Policy",
          "description": "The image pull policy",
          "default": "IfNotPresent",
          "enum": [
            "Always",
            "Never",
            "IfNotPresent"
          ],
          "type": "string"
        },
        "args": {
          "title": "Args",
          "description": "The arguments to be passed to the container",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "title": "Command",
          "description": "The command to be executed in the container",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "volume_mounts": {
          "title": "Volume Mounts",
          "description": "The volume mounts to be mounted in the container",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMounts"
          }
        }
      },
      "required": [
        "image"
      ],
      "additionalProperties": false
    },
    "VolumeEmptyDir": {
      "title": "VolumeEmptyDir",
      "description": "EmptyDir volume schema.",
      "type": "object",
      "properties": {
        "medium": {
          "title": "Medium",
          "description": "What type of storage medium should back this directory.",
          "default": "",
          "enum": [
            "",
            "Memory",
            "HugePages"
          ],
          "type": "string"
        },
        "sizeLimit": {
          "title": "Sizelimit",
          "description": "Total amount of local storage required for this EmptyDir volume.",
          "type": "string"
        }
      }
    },
    "VolumeHostPath": {
      "title": "VolumeHostPath",
      "description": "HostPath volume schema.",
      "type": "object",
      "properties": {
        "path": {
          "title": "Path",
          "description": "Path of the directory on the host.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "description": "Type for HostPath volume.",
          "type": "string"
        }
      },
      "required": [
        "path"
      ]
    },
    "VolumePersistentVolumeClaim": {
      "title": "VolumePersistentVolumeClaim",
      "description": "PersistentVolumeClaim schema.",
      "type": "object",
      "properties": {
        "claimName": {
          "title": "Claimname",
          "description": "Name of the PersistentVolumeClaim to use.",
          "type": "string"
        },
        "readOnly": {
          "title": "Readonly",
          "description": "Whether the volume is read only.",
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "claimName"
      ]
    },
    "VolumeSource": {
      "title": "VolumeSource",
      "description": "Volume source schema.",
      "anyOf": [
        {
          "$ref": "#/definitions/VolumeEmptyDir"
        },
        {
          "$ref": "#/definitions/VolumeHostPath"
        },
        {
          "$ref": "#/definitions/VolumePersistentVolumeClaim"
        }
      ]
    },
    "PersistentVolumeClaim": {
      "title": "PersistentVolumeClaim",
      "description": "PersistentVolumeClaim schema.",
      "type": "object",
      "properties": {
        "claimName": {
          "title": "Claimname",
          "type": "string"
        }
      },
      "required": [
        "claimName"
      ]
    },
    "Secret": {
      "title": "Secret",
      "description": "Secret schema.",
      "type": "object",
      "properties": {
        "secretName": {
          "title": "Secretname",
          "type": "string"
        }
      },
      "required": [
        "secretName"
      ]
    },
    "Volume": {
      "title": "Volume",
      "description": "Volume schema.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "Volume name. Must be a DNS_LABEL and unique within the pod.",
          "type": "string"
        },
        "volume_source": {
          "$ref": "#/definitions/VolumeSource"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/PersistentVolumeClaim"
        },
        "secret": {
          "$ref": "#/definitions/Secret"
        }
      },
      "required": [
        "name",
        "volume_source"
      ]
    }
  }
}