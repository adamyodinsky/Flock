# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class BaseMetaData(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    BaseMetaData - a model defined in OpenAPI

        annotations: The annotations of this BaseMetaData [Optional].
        labels: The labels of this BaseMetaData [Optional].
        name: The name of this BaseMetaData.
        description: The description of this BaseMetaData.
    """

    annotations: Optional[Dict[str, str]] = Field(alias="annotations", default=None)
    labels: Optional[Dict[str, str]] = Field(alias="labels", default=None)
    name: str = Field(alias="name")
    description: str = Field(alias="description")

    @validator("name")
    def name_max_length(cls, value):
        assert len(value) <= 63
        return value

    @validator("description")
    def description_max_length(cls, value):
        assert len(value) <= 255
        return value

BaseMetaData.update_forward_refs()
