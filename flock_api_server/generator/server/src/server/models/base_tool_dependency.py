# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from server.models.kind import Kind


class BaseToolDependency(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    BaseToolDependency - a model defined in OpenAPI

        labels: The labels of this BaseToolDependency [Optional].
        name: The name of this BaseToolDependency.
        kind: The kind of this BaseToolDependency.
        namespace: The namespace of this BaseToolDependency [Optional].
        description: The description of this BaseToolDependency [Optional].
    """

    labels: Optional[Dict[str, str]] = Field(alias="labels", default=None)
    name: str = Field(alias="name")
    kind: Kind = Field(alias="kind")
    namespace: Optional[str] = Field(alias="namespace", default=None)
    description: Optional[str] = Field(alias="description", default=None)

    @validator("namespace")
    def namespace_max_length(cls, value):
        assert len(value) <= 63
        return value

BaseToolDependency.update_forward_refs()
